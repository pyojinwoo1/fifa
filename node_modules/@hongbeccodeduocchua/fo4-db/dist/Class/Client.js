"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
const axios_1 = __importDefault(require("axios"));
const Player_1 = require("./Player");
const enum_1 = require("../utils/enum");
class Client {
    options;
    baseURL;
    apiURL;
    player = new Player_1.Player(this);
    constructor(options) {
        this.options = options;
        this.valiDateOptions();
        this.baseURL = `https://${options.region === enum_1.Regions.TH ? "" : options.region + "."}fifaaddict.com/`;
        this.apiURL = this.baseURL + "api2";
    }
    // Public methods
    async rest(method, url) {
        const res = await (0, axios_1.default)({
            method,
            url: this.apiURL + url,
            headers: {
                referer: this.baseURL,
                "x-requested-with": "XMLHttpRequest",
            },
        });
        return new Promise((resolve, reject) => {
            if (res.status === 200) {
                resolve(res.data);
            }
            else {
                reject(res.data);
            }
        });
    }
    // Private methods
    valiDateOptions() {
        const { region } = this.options;
        if (!region) {
            throw new Error("Region is required");
        }
        else if (typeof region !== "string") {
            throw new Error("Region must be a string");
        }
    }
}
exports.Client = Client;
